name: Deploy and Testing in Preview

on:
  pull_request:
    types: [opened, synchronize, reopened]

concurrency:
  group: pr-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  deploy-preview:
    runs-on: ubuntu-latest
    outputs:
      deploy-url: ${{ steps.construct-url.outputs.deploy-url }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install Dependencies
        run: npm ci

      - name: Create .env file
        run: |
          touch .env
          echo "BASE_API_URL=${{ secrets.BASE_API_URL }}" >> .env
          echo "DATABASE_NAME=${{ secrets.DATABASE_NAME }}" >> .env
          echo "DATABASE_VERSION=${{ secrets.DATABASE_VERSION }}" >> .env
          echo "DATABASE_OBJECT_STORE_NAME=${{ secrets.DATABASE_OBJECT_STORE_NAME }}" >> .env

      - name: Verify .env before build
        run: cat .env

      - name: Build Project
        run: npm run build

      - name: Deploy Preview to Netlify
        id: netlify
        uses: nwtgck/actions-netlify@v3.0
        with:
          publish-dir: './dist'
          github-token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          deploy-message: 'Deploy Preview for PR #${{ github.event.pull_request.number }}'
          github-deployment-environment: preview
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

      - name: Debug Netlify Output
        run: |
          echo "Raw Deploy URL: ${{ steps.netlify.outputs.deploy-url }}"

      - name: Construct deploy URL with HTTPS
        id: construct-url
        run: |
          DEPLOY_URL="${{ steps.netlify.outputs.deploy-url }}"
          if [[ -z "$DEPLOY_URL" ]]; then
            echo "ðŸš¨ Error: Deploy URL is empty!"
            exit 1
          fi
          if [[ $DEPLOY_URL != http* ]]; then
            DEPLOY_URL="https://$DEPLOY_URL"
          fi
          echo "deploy-url=$DEPLOY_URL" >> $GITHUB_OUTPUT

      - name: Verify deploy-url
        run: echo "DEPLOY_URL=${{ steps.construct-url.outputs.deploy-url }}"

      - name: Save deploy-url to a file
        run: echo "${{ steps.construct-url.outputs.deploy-url }}" > deploy_url.txt

      - name: Upload deploy-url as artifact
        uses: actions/upload-artifact@v4
        with:
          name: deploy-url
          path: deploy_url.txt

  testing:
    runs-on: ubuntu-latest
    needs: deploy-preview

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install dependencies
        run: npm ci

      - name: Download deploy-url artifact
        uses: actions/download-artifact@v4
        with:
          name: deploy-url

      - name: Read deploy-url from file
        id: get-deploy-url
        run: |
          DEPLOY_URL=$(cat deploy_url.txt)
          if [[ -z "$DEPLOY_URL" ]]; then
            echo "ðŸš¨ Error: BASE_URL is empty!"
            exit 1
          fi
          echo "BASE_URL=$DEPLOY_URL" >> $GITHUB_ENV

      - name: Validate BASE_URL before using
        run: |
          echo "âœ… BASE_URL is available: $BASE_URL"

      - name: Create .env file
        run: |
          touch .env
          echo "BASE_API_URL=${{ secrets.BASE_API_URL }}" >> .env
          echo "DATABASE_NAME=${{ secrets.DATABASE_NAME }}" >> .env
          echo "DATABASE_VERSION=${{ secrets.DATABASE_VERSION }}" >> .env
          echo "DATABASE_OBJECT_STORE_NAME=${{ secrets.DATABASE_OBJECT_STORE_NAME }}" >> .env
          echo "BASE_URL=$BASE_URL" >> .env

      - name: Verify .env before tests
        run: cat .env

      - name: Check Jest Installation
        run: npx jest --version || echo "Jest is not installed!"

      - name: Run Jest tests
        run: npm run test

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        run: npm run e2e

      - name: Upload Playwright Trace
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
