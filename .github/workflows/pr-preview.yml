name: Deploy and Testing PR Preview

on:
  pull_request:
    types: [opened, synchronize, reopened]

concurrency:
  group: pr-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  deploy-preview:
    runs-on: ubuntu-latest
    outputs:
      deploy-url: ${{ steps.netlify.outputs.deploy-url }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Create .env file
        run: |
          touch .env
          echo "BASE_API_URL=${{ secrets.BASE_API_URL }}" >> .env
          echo "DATABASE_NAME=${{ secrets.DATABASE_NAME }}" >> .env
          echo "DATABASE_VERSION=${{ secrets.DATABASE_VERSION }}" >> .env
          echo "DATABASE_OBJECT_STORE_NAME=${{ secrets.DATABASE_OBJECT_STORE_NAME }}" >> .env

      - name: Set BASE_URL
        run: echo "BASE_URL=${{ steps.netlify.outputs.deploy-url }}" >> $GITHUB_ENV

      - name: Verify .env before build
        run: ls -la && cat .env

      - name: Build Project
        run: npm run build

      - name: Deploy to Netlify (PR Preview)
        id: netlify
        uses: nwtgck/actions-netlify@v3.0
        with:
          publish-dir: './dist'
          deploy-message: 'Preview for PR #${{ github.event.pull_request.number }}'
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

      # Pastikan URL memiliki protokol HTTPS
      - name: Construct deploy URL with HTTPS
        id: construct-url
        run: |
          DEPLOY_URL="${{ steps.netlify.outputs.deploy-url }}"
          if [[ $DEPLOY_URL != http* ]]; then
            DEPLOY_URL="https://$DEPLOY_URL"
          fi
          echo "deploy-url=$DEPLOY_URL" >> $GITHUB_OUTPUT

      - name: Set BASE_URL 2
        run: echo "BASE_URL=${{ steps.netlify.outputs.deploy-url }}" >> $GITHUB_ENV

      - name: Verify .env after build
        run: ls -la && cat .env

      - name: Post Comment with Preview Link
        uses: thollander/actions-comment-pull-request@v3
        with:
          message: 'PR Preview deployed: ${{ steps.netlify.outputs.deploy-url }}'

  # testing:
  #   runs-on: ubuntu-latest
  #   needs: deploy-preview
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4

  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: lts/*
  #         cache: 'npm'

  #     - name: Install dependencies
  #       run: npm ci

  #     - name: Create .env file
  #       run: |
  #         touch .env
  #         echo "BASE_API_URL=${{ secrets.BASE_API_URL }}" >> .env
  #         echo "DATABASE_NAME=${{ secrets.DATABASE_NAME }}" >> .env
  #         echo "DATABASE_VERSION=${{ secrets.DATABASE_VERSION }}" >> .env
  #         echo "DATABASE_OBJECT_STORE_NAME=${{ secrets.DATABASE_OBJECT_STORE_NAME }}" >> .env

  #     - name: Verify .env before build
  #       run: cat .env

  #     - name: Set BASE_URL from Deploy Preview
  #       run: echo "BASE_URL=$DEPLOY_URL" >> $GITHUB_ENV
  #       env:
  #         DEPLOY_URL: ${{ needs.deploy-preview.outputs.deploy-url }}

  #     - name: Verify BASE_URL
  #       run: echo "BASE_URL is $BASE_URL"

  #     - name: Run Jest tests
  #       run: npm test

  #     - name: Install Playwright Browsers
  #       run: npx playwright install --with-deps

  #     - name: Run Playwright tests
  #       env:
  #         BASE_URL: ${{ env.BASE_URL }}
  #         BASE_API_URL: ${{ secrets.BASE_API_URL }}
  #         DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
  #         DATABASE_VERSION: ${{ secrets.DATABASE_VERSION }}
  #         DATABASE_OBJECT_STORE_NAME: ${{ secrets.DATABASE_OBJECT_STORE_NAME }}
  #       run: |
  #         echo "Testing URL: $BASE_URL"
  #         npx playwright test --config=playwright.config.js

  #     - name: Upload Playwright Trace
  #       uses: actions/upload-artifact@v4
  #       if: always()
  #       with:
  #         name: playwright-trace
  #         path: test-results/
  #         retention-days: 30
